"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createConfigForVersion = exports.writeConfig = exports.readConfig = void 0;
var fs_1 = require("fs");
var path_1 = require("path");
var download_1 = require("./download");
var GITHUB_PATH = 'https://github.com/catboost/catboost/releases/download/';
var PLATFORM_TO_BINARY = {
    'linux': ['libcatboostmodel.so'],
    'mac': ['libcatboostmodel.dylib'],
    'win': ['catboostmodel.dll', 'catboostmodel.lib'],
};
function parseBinaryFileData(mapEntry) {
    if (mapEntry['url'] === undefined || mapEntry['sha256'] === undefined || mapEntry['targetFile'] === undefined) {
        throw new Error("Not a correct binary file entry in the config: " + JSON.stringify(mapEntry));
    }
    return {
        url: mapEntry['url'],
        targetFile: mapEntry['targetFile'],
        sha256: mapEntry['sha256'],
    };
}
function readConfigFile(path) {
    var data = JSON.parse(fs_1.readFileSync(path).toString());
    var entries = {};
    for (var _i = 0, _a = Object.keys(data); _i < _a.length; _i++) {
        var platform = _a[_i];
        entries[platform] = data[platform].map(parseBinaryFileData);
    }
    return {
        binaries: entries,
    };
}
function readConfig() {
    return readConfigFile('./config.json');
}
exports.readConfig = readConfig;
function writeConfig(config) {
    fs_1.writeFileSync('./config.json', JSON.stringify(config.binaries, null, 1));
}
exports.writeConfig = writeConfig;
function createConfigForVersion(version) {
    return __awaiter(this, void 0, void 0, function () {
        var config, failedToDownload, _i, _a, platform, _b, _c, binary, targetFile, url, tmpPath, error_1, sha256, error;
        return __generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    config = {
                        binaries: {},
                    };
                    failedToDownload = [];
                    _i = 0, _a = Object.keys(PLATFORM_TO_BINARY);
                    _d.label = 1;
                case 1:
                    if (!(_i < _a.length)) return [3 /*break*/, 9];
                    platform = _a[_i];
                    config.binaries[platform] = [];
                    _b = 0, _c = PLATFORM_TO_BINARY[platform];
                    _d.label = 2;
                case 2:
                    if (!(_b < _c.length)) return [3 /*break*/, 8];
                    binary = _c[_b];
                    targetFile = binary;
                    url = path_1.join(GITHUB_PATH, version, targetFile);
                    tmpPath = path_1.join('./build/tmp/', targetFile);
                    _d.label = 3;
                case 3:
                    _d.trys.push([3, 5, , 6]);
                    return [4 /*yield*/, download_1.downloadFile(url, tmpPath)];
                case 4:
                    _d.sent();
                    return [3 /*break*/, 6];
                case 5:
                    error_1 = _d.sent();
                    failedToDownload.push(targetFile);
                    config.binaries[platform].push({
                        url: "Not found: " + targetFile,
                        sha256: '',
                        targetFile: targetFile,
                    });
                    return [3 /*break*/, 7];
                case 6:
                    sha256 = download_1.calculateFileHash(tmpPath);
                    config.binaries[platform].push({ url: url, sha256: sha256, targetFile: targetFile });
                    _d.label = 7;
                case 7:
                    _b++;
                    return [3 /*break*/, 2];
                case 8:
                    _i++;
                    return [3 /*break*/, 1];
                case 9:
                    if (failedToDownload.length > 0) {
                        error = new Error("\n==========================================\nThe following release files failed to get auto-detected:\n" + failedToDownload.map(function (file) { return "\t- " + file; }).join('\n') + "\nPlease open 'config.json' and adjust the links and checksums manually.\n==========================================\n");
                    }
                    return [2 /*return*/, [config, error]];
            }
        });
    });
}
exports.createConfigForVersion = createConfigForVersion;
